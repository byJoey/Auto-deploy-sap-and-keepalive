name: 自动保活 SAP

on:
  schedule:
    - cron: '17 00 * * *'      
  workflow_dispatch:          # 允许手动触发

jobs:
  restart-sg-apps:
    runs-on: ubuntu-latest
    name: 重启新加坡(SG)区域应用
    if: always()
    continue-on-error: true

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 安装 CF CLI
      run: |
        wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
        echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
        sudo apt-get update
        sudo apt-get install -y cf8-cli

    - name: 设置 SG 区域 API 端点
      run: |
        echo "CF_API=https://api.cf.ap21.hana.ondemand.com" >> $GITHUB_ENV
        echo "使用API端点: $CF_API (区域: SG)"

    - name: 登录并自动检测组织和空间
      run: |
        cf login -a ${{ env.CF_API }} -u "${{ secrets.EMAIL }}" -p "${{ secrets.PASSWORD }}"
        
        echo "自动检测SG区域可用的组织和空间..."
        
        SELECTED_ORG=$(cf orgs | grep -v "^name$" | grep -v "^Getting orgs" | grep -v "^$" | head -n 1 | awk '{print $1}')
        
        if [ -z "$SELECTED_ORG" ]; then
          echo "错误: 未找到可用的组织"
          exit 1
        fi
        
        echo "选择组织: $SELECTED_ORG"
        cf target -o "$SELECTED_ORG"
        
        SELECTED_SPACE=$(cf spaces | grep -v "^name$" | grep -v "^Getting spaces" | grep -v "^$" | head -n 1 | awk '{print $1}')
        
        if [ -z "$SELECTED_SPACE" ]; then
          echo "错误: 未找到可用的空间"
          exit 1
        fi
        
        echo "选择空间: $SELECTED_SPACE"
        cf target -s "$SELECTED_SPACE"
        
        echo "当前SG区域目标:"
        cf target
        
        echo "SELECTED_ORG=$SELECTED_ORG" >> $GITHUB_ENV
        echo "SELECTED_SPACE=$SELECTED_SPACE" >> $GITHUB_ENV

    - name: '[仅定时任务] 等待到 UTC+8 08:17'
      if: github.event_name == 'schedule'
      run: |
        sudo apt-get update && sudo apt-get install -y jq
        echo "定时任务触发，等待 UTC+8 时间到达 08:17..."
        while true; do
          current_time=$(curl -s http://worldtimeapi.org/api/timezone/Asia/Shanghai | jq -r '.datetime' | cut -c 12-16)
          echo "当前 UTC+8 时间: $current_time"
          if [[ "$current_time" == "08:17" ]]; then
            echo "时间到达 08:17，开始执行重启任务。"
            break
          fi
          echo "时间未到，30秒后重试..."
          sleep 30
        done

    - name: 获取所有应用
      id: get-sg-apps
      run: |
        echo "扫描SG区域中的所有应用..."
        apps=$(cf apps | awk 'NR>3 {print $1}' | grep -v '^$')
        echo "发现的应用:"
        echo "$apps"
        if [ -n "$apps" ]; then
          app_count=$(echo "$apps" | wc -l)
          echo "SG区域总共发现 $app_count 个应用"
        else
          echo "SG区域未发现任何应用"
        fi
        echo "apps<<EOF" >> $GITHUB_OUTPUT
        echo "$apps" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: 重启所有应用
      run: |
        apps="${{ steps.get-sg-apps.outputs.apps }}"
        if [ -z "$apps" ]; then
          echo "在SG区域中未找到任何应用，跳过重启操作"
          exit 0
        fi
        
        echo "开始重启SG区域中的应用:"
        success_count=0
        failure_count=0
        
        for app in $apps; do
          echo "正在重启应用: $app"
          if cf restart "$app"; then
            echo "应用 $app 重启成功"
            success_count=$((success_count + 1))
          else
            echo "应用 $app 重启失败"
            failure_count=$((failure_count + 1))
          fi
          echo "----------------------------------------"
          sleep 15
        done
        
        echo "SG区域重启操作完成"
        echo "成功重启: $success_count 个应用"
        echo "重启失败: $failure_count 个应用"

    - name: 验证应用状态
      run: |
        echo "验证SG区域应用状态..."
        cf apps

  restart-us-apps:
    runs-on: ubuntu-latest
    name: 重启美国(US)区域应用
    if: always()
    continue-on-error: true

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 安装 CF CLI
      run: |
        wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
        echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
        sudo apt-get update
        sudo apt-get install -y cf8-cli

    - name: 设置 US 区域 API 端点
      run: |
        echo "CF_API=https://api.cf.us10-001.hana.ondemand.com" >> $GITHUB_ENV
        echo "使用API端点: $CF_API (区域: US)"

    - name: 登录并自动检测组织和空间
      run: |
        cf login -a ${{ env.CF_API }} -u "${{ secrets.EMAIL }}" -p "${{ secrets.PASSWORD }}"
        
        echo "自动检测US区域可用的组织和空间..."
        
        SELECTED_ORG=$(cf orgs | grep -v "^name$" | grep -v "^Getting orgs" | grep -v "^$" | head -n 1 | awk '{print $1}')
        
        if [ -z "$SELECTED_ORG" ]; then
          echo "错误: 未找到可用的组织"
          exit 1
        fi
        
        echo "选择组织: $SELECTED_ORG"
        cf target -o "$SELECTED_ORG"
        
        SELECTED_SPACE=$(cf spaces | grep -v "^name$" | grep -v "^Getting spaces" | grep -v "^$" | head -n 1 | awk '{print $1}')
        
        if [ -z "$SELECTED_SPACE" ]; then
          echo "错误: 未找到可用的空间"
          exit 1
        fi
        
        echo "选择空间: $SELECTED_SPACE"
        cf target -s "$SELECTED_SPACE"
        
        echo "当前US区域目标:"
        cf target
        
        echo "SELECTED_ORG=$SELECTED_ORG" >> $GITHUB_ENV
        echo "SELECTED_SPACE=$SELECTED_SPACE" >> $GITHUB_ENV

    - name: '[仅定时任务] 等待到 UTC+8 08:17'
      if: github.event_name == 'schedule'
      run: |
        sudo apt-get update && sudo apt-get install -y jq
        echo "定时任务触发，等待 UTC+8 时间到达 08:20..."
        while true; do
          current_time=$(curl -s http://worldtimeapi.org/api/timezone/Asia/Shanghai | jq -r '.datetime' | cut -c 12-16)
          echo "当前 UTC+8 时间: $current_time"
          if [[ "$current_time" == "08:20" ]]; then
            echo "时间到达 08:20，开始执行重启任务。"
            break
          fi
          echo "时间未到，30秒后重试..."
          sleep 30
        done

    - name: 获取所有应用
      id: get-us-apps
      run: |
        echo "扫描US区域中的所有应用..."
        apps=$(cf apps | awk 'NR>3 {print $1}' | grep -v '^$')
        echo "发现的应用:"
        echo "$apps"
        if [ -n "$apps" ]; then
          app_count=$(echo "$apps" | wc -l)
          echo "US区域总共发现 $app_count 个应用"
        else
          echo "US区域未发现任何应用"
        fi
        echo "apps<<EOF" >> $GITHUB_OUTPUT
        echo "$apps" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: 重启所有应用
      run: |
        apps="${{ steps.get-us-apps.outputs.apps }}"
        if [ -z "$apps" ]; then
          echo "在US区域中未找到任何应用，跳过重启操作"
          exit 0
        fi
        
        echo "开始重启US区域中的应用:"
        success_count=0
        failure_count=0
        
        for app in $apps; do
          echo "正在重启应用: $app"
          if cf restart "$app"; then
            echo "应用 $app 重启成功"
            success_count=$((success_count + 1))
          else
            echo "应用 $app 重启失败"
            failure_count=$((failure_count + 1))
          fi
          echo "----------------------------------------"
          sleep 15
        done
        
        echo "US区域重启操作完成"
        echo "成功重启: $success_count 个应用"
        echo "重启失败: $failure_count 个应用"

    - name: 验证应用状态
      run: |
        echo "验证US区域应用状态..."
        cf apps
